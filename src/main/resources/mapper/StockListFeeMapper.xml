<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxyw.dao.StockListFeeMapper">
  <resultMap id="BaseResultMap" type="com.lxyw.entity.StockListFee">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="FEE_TYPE" jdbcType="VARCHAR" property="feeType" />
    <result column="FEE_NUM" jdbcType="DECIMAL" property="feeNum" />
    <result column="STOCK_LIST_ID" jdbcType="VARCHAR" property="stockListId" />
    <result column="CREATED_BY" jdbcType="VARCHAR" property="createdBy" />
    <result column="CREATED_DATE" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="UPDATE_BY" jdbcType="VARCHAR" property="updateBy" />
    <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="VERSION" jdbcType="BIGINT" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, FEE_TYPE, FEE_NUM, STOCK_LIST_ID, CREATED_BY, CREATED_DATE, UPDATE_BY, UPDATE_DATE, 
    VERSION
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stock_list_fee
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from stock_list_fee
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.lxyw.entity.StockListFee">
    insert into stock_list_fee (ID, FEE_TYPE, FEE_NUM, 
      STOCK_LIST_ID, CREATED_BY, CREATED_DATE, 
      UPDATE_BY, UPDATE_DATE, VERSION
      )
    values (#{id,jdbcType=VARCHAR}, #{feeType,jdbcType=VARCHAR}, #{feeNum,jdbcType=DECIMAL}, 
      #{stockListId,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{version,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lxyw.entity.StockListFee">
    insert into stock_list_fee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="feeType != null">
        FEE_TYPE,
      </if>
      <if test="feeNum != null">
        FEE_NUM,
      </if>
      <if test="stockListId != null">
        STOCK_LIST_ID,
      </if>
      <if test="createdBy != null">
        CREATED_BY,
      </if>
      <if test="createdDate != null">
        CREATED_DATE,
      </if>
      <if test="updateBy != null">
        UPDATE_BY,
      </if>
      <if test="updateDate != null">
        UPDATE_DATE,
      </if>
      <if test="version != null">
        VERSION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="feeType != null">
        #{feeType,jdbcType=VARCHAR},
      </if>
      <if test="feeNum != null">
        #{feeNum,jdbcType=DECIMAL},
      </if>
      <if test="stockListId != null">
        #{stockListId,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lxyw.entity.StockListFee">
    update stock_list_fee
    <set>
      <if test="feeType != null">
        FEE_TYPE = #{feeType,jdbcType=VARCHAR},
      </if>
      <if test="feeNum != null">
        FEE_NUM = #{feeNum,jdbcType=DECIMAL},
      </if>
      <if test="stockListId != null">
        STOCK_LIST_ID = #{stockListId,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=BIGINT},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lxyw.entity.StockListFee">
    update stock_list_fee
    set FEE_TYPE = #{feeType,jdbcType=VARCHAR},
      FEE_NUM = #{feeNum,jdbcType=DECIMAL},
      STOCK_LIST_ID = #{stockListId,jdbcType=VARCHAR},
      CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      VERSION = #{version,jdbcType=BIGINT}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <insert id="batchInsert" parameterType="java.util.List">
    <!--
      WARNING - @mbg.generated
      这个节点为代码生成工具生成，请不要修改!
      @author hewei
    -->
    insert into stock_list_fee (ID, FEE_TYPE, FEE_NUM, STOCK_LIST_ID, CREATED_BY, CREATED_DATE, UPDATE_BY, UPDATE_DATE, VERSION)
    values
    <foreach collection="list" item="item" separator=",">
       (#{item.id,jdbcType=VARCHAR}, #{item.feeType,jdbcType=VARCHAR}, #{item.feeNum,jdbcType=DECIMAL}, #{item.stockListId,jdbcType=VARCHAR}, #{item.createdBy,jdbcType=VARCHAR}, #{item.createdDate,jdbcType=TIMESTAMP}, #{item.updateBy,jdbcType=VARCHAR}, #{item.updateDate,jdbcType=TIMESTAMP}, #{item.version,jdbcType=BIGINT})
    </foreach>
  </insert>
</mapper>